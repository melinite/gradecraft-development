.small-12.panel.mainContent
  / Grades Navigation
  = content_nav do
    = render "assignments/tabs"

  %span.pagetitle= @title

  .small-12.medium-4.columns.right
    
    - if current_course.has_teams? && @assignment.is_individual?
      = form_tag mass_grade_assignment_path, :name => "see_team", :onchange => ("javascript: document.see_team.submit();"), :method => :get do
        = hidden_field_tag :assignment_id, @assignment.id
        = select_tag :team_id, options_for_select(current_course.teams.alpha.map { |t| [t.name, t.id] }, @team.try(:id)), :prompt => "Select #{current_course.team_term}"

    .clearfix

  .small-12.columns
    #massGrade
      = simple_form_for @assignment, method: :put, :url => mass_grade_assignment_path(@assignment) do |f|
        - if @team.present?
          = hidden_field_tag :team_id, @team.id
        

        %table.responsive
          - if @assignment.grade_checkboxes?
            %thead
              %tr
                %th
                %th
                  .button-bar
                    %ul.button-group.round.right
                      %li.select-all.button.tiny= "Check All"
                      %li.select-none.button.tiny= "Uncheck"
          - @grades.each_with_index do |grade, i|
            %tr
              %td= link_to grade.student.name, student_path(grade.student)
              %td.right
                = f.simple_fields_for :grades, grade do |gf|
                  = gf.hidden_field :graded_by_id
                  - if !grade.status
                    = gf.hidden_field :status, :value => "Graded"
                  = gf.hidden_field :student_id
                  = label_tag do
                    // Checking to see if the grade is actually graded before setting the default value to 0
                    - if @assignment.grade_select? && @assignment.assignment_type.has_levels? && grade.status.present?
                      = gf.select :raw_score, options_from_collection_for_select(@score_levels, :value, :name, grade.raw_score), include_blank: true
                    - elsif @assignment.grade_select? && @assignment.assignment_type.has_levels?
                      = gf.select :raw_score, options_from_collection_for_select(@score_levels, :value, :name), include_blank: true
                    - elsif @assignment.grade_select? && @assignment.has_levels? && grade.status.present?
                      = gf.select :raw_score, options_from_collection_for_select(@assignment_score_levels, :value, :name, grade.raw_score), include_blank: true
                    - elsif @assignment.grade_select? && @assignment.has_levels?
                      = gf.select :raw_score, options_from_collection_for_select(@assignment_score_levels, :value, :name), include_blank: true
                    - elsif @assignment.grade_radio? && @assignment.assignment_type.has_levels?
                      %ul.inline-list
                        - @score_levels.each do |score_level|
                          %li
                            = gf.label :raw_score, score_level.name, value: score_level.value
                            = gf.radio_button :raw_score, score_level.value, :class => "radio_inline"
                    - elsif @assignment.grade_radio? && @assignment.has_levels?
                      - @assignment_score_levels.each do |assignment_score_level|
                        = gf.label :raw_score, assignment_score_level.name, value: assignment_score_level.value
                        = gf.radio_button :raw_score, assignment_score_level.value, :class => "radio_inline"
                    - elsif @assignment.grade_checkboxes?
                      = gf.check_box :raw_score, {}, @assignment.point_total, nil
                    - else
                      - if grade.persisted? && (grade.status == "Graded" || grade.status == "Released")
                        %td
                          = gf.text_field :raw_score, data: {autonumeric: true, "m-dec" => "0"}
                          
                      - else
                        %td= gf.text_field :raw_score, :value => nil, data: {autonumeric: true, "m-dec" => "0"}
                        %td= gf.label :raw_score, "/ #{points @assignment.point_total}"

        .right
          = f.button :submit, "Submit Grades", :class => "button tiny radius"
          = link_to 'Cancel', assignments_path, :class => "button tiny radius transparent"

  .clearfix