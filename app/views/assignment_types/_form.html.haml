/ Using Simple Form to create an assignment type
= simple_form_for(@assignment_type) do |f|
  / First section should cover the simple stuff we need to know about every assignment type
  .panel
    %h4.bold The Basics
    .small-12.large-4.columns.panel.right.callout
      .small-12
        %label.checkbox{ :for => "include_in_predictor" }
          = f.label :include_in_predictor, "Include in Grade Predictor"
          = f.check_box :include_in_predictor
          .form_label Can #{term_for :students} see this #{term_for :assignment} in the grade predictor?

      .small-12
        %label.checkbox{ :for => "include_in_timeline" }
          = f.label :include_in_timeline, "Include in Timeline"
          = f.check_box :include_in_timeline
          .form_label Can #{term_for :students} see this #{term_for :assignment} in the course timeline? Note that #{term_for :assignments} without open or due dates will be excluded automatically.

      .small-12
        %label.checkbox{ :for => "include_in_to_do" }
          = f.label :include_in_to_do, "Include in To Do List"
          = f.check_box :include_in_to_do
          .form_label Can #{term_for :students} see this #{term_for :assignment} in the course to do list? Note that #{term_for :assignments} without due dates will be excluded automatically.

      .small-12
        %label.checkbox{ :for => "student_weightable" }
          = f.label :student_weightable, "Student Weighted"
          = f.check_box :student_weightable
          .form_label Do students decide how much this #{term_for :assignment} type will count towards their grade?

      .small-12
        / Does this assignment type have due dates? If not, they won't appear in the timeline but they will appear on the assignment list
        %label.checkbox{ :for => "due_date_present" }
          = f.label :due_date_present, "Due Dates"
          = f.check_box :due_date_present
          .form_label Will #{term_for :assignments} in this category have due dates?

    .small-12.large-4.columns
      .small-12
        / Assignment Type name, this will appear as the category heading for both students and staff
        = f.label :name
        = f.text_field :name

      .small-12
        / Determining whether points for assignments are set at this level (universally, with override at the assignment level), or at the assignment level
        = f.label :point_setting
        = f.select :point_setting, [["By Assignment"], ["For All Assignments"]]

      .small-12
        = f.label :resubmission
        = f.select :resubmission, options_for_select([["Yes", "1"], ["No", "0"], ["Set per #{term_for :assignment}", "2"]])
        .form_label Will students be allowed to resubmit work after it's been graded?

    .small-12.large-4.columns
      .small-12
        / If the points are universal, this is setting that value
        = f.label :universal_point_value, "Point Value"
        = f.text_field :universal_point_value, data: {autonumeric: true, "m-dec" => "0"}
        .form_label Do all #{term_for :assignments} of this type have the same point value? For instance, if all class attendance #{term_for :assignments} are worth 100 points and you can set that here.

      %br

      .small-12
        / What's the maximum number of points a student may earn in this category? This cap needs to be finished
        = f.label :max_value, :label => "Maximum Points"
        = f.text_field :max_value, data: {autonumeric: true, "m-dec" => "0"}
        .form_label Is there a cap on how many points students can earn here? (Leave blank if not)

    .clearfix

    .small-12.large-12.columns.textarea
      = f.label :predictor_description, "Description"
      = f.bootsy_area :predictor_description
      .form_label How would you like to describe this #{term_for :assignment} type on the student dashboard? Are there hints that you can give students that will help them understand how to succeed?

    .clearfix

  .panel
    %h4.bold Predictor Settings
    .small-12.large-4.columns
      = f.label :points_predictor_display, "Predictor Display"
      = f.select :points_predictor_display, [["Checkbox", "Fixed"], ["Slider"], ["Select List"], ["Set per Assignment"]]
      .form_label How would you like #{term_for :students} to interact with this assignment in the predictor? If you choose Slider or Select List you must create Score Levels below
    .clearfix

  .panel
    %h4.bold Grading
    .small-12.large-4.columns
      = f.label :mass_grade_type, "Quick Grade Format"
      = f.select :mass_grade_type, [["Text"], ["Checkbox"], ["Radio Buttons"], ["Select List"], ["Set per Assignment"]]
      .form_label Would you like the levels to be represented via checkbox, radio buttons or select forms?
    .small-12.large-4.columns
      = f.label :notify_released, "Notify by email?"
      = f.check_box :notify_released
      .form_label Do you want to notify students by email when a grade is awarded? If grade release is necessary, this email will not be sent out until the grade is officially released.

    %h5 Self-Grading
    .small-12.large-4.columns
      = f.label :student_logged_button_text, "Button Text"
      = f.text_field :student_logged_button_text
      .form_label If you would like students to be able to log their own grades, what would you like the button that does this to say?

    .small-12.large-4.columns
      = f.label :student_logged_revert_button_text, "Revert Button Text"
      = f.text_field :student_logged_revert_button_text
      .form_label If a student unchecks this button, what should it say?

    .clearfix

  .panel
    %h4.bold Grading Scheme
    .score-levels
      %h6 Example: You could create three score levels to produce this quick grading scheme - Complete (5000 points), Finalist (7000 points), and Winner (10,000 points). These levels will then be available to use for quick grading.
      %script(id="score-level-template" type="text/x-template")
        %fieldset.score-level.callout.panel
          = f.simple_fields_for :score_levels, ScoreLevel.new, class: 'form-inline', child_index: 'child_index' do |slf|
            = render 'score_level_fields', f: slf
      - @assignment_type.score_levels.order_by_value.each do |score_level|
        %fieldset.score-level.callout.panel
          = f.simple_fields_for :score_levels, score_level, class: 'form-inline' do |slf|
            = render 'score_level_fields', f: slf
    = link_to 'Add a Level', '#', class: 'add-level button tiny radius'

  .right
    = f.button :submit, "#{@assignment_type.persisted? ? 'Update' : 'Create'} #{term_for :assignment_type}", :class => "button radius tiny"
    = link_to 'Cancel', assignment_types_path, :class => "button radius tiny transparent"